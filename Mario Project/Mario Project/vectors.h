/*============================================================================*/
/*== [vectors.h] [Version: 0.028a]                                          ==*/
/*============================================================================*/
/*===         _____         _        _____           _         _           ===*/
/*===        |     |___ ___|_|___   |  _  |___ ___  |_|___ ___| |_         ===*/
/*===        | | | | .'|  _| | . |  |   __|  _| . | | | -_|  _|  _|        ===*/
/*===        |_|_|_|__,|_| |_|___|  |__|  |_| |___|_| |___|___|_|          ===*/
/*===                                             |___|                    ===*/
/*============================================================================*/
/*===      =LagMan=                =McCaml=                 =MouleMan=     ===*/
/*============================================================================*/

/******************************************************************************/
/*==============================[DEFINES/ENUMS/]==============================*/
/******************************************************************************/

#ifndef VECTORS_H
#define VECTORS_H


/******************************************************************************/
/*=================================[INCLUDES]=================================*/
/******************************************************************************/

#include <math.h>


/******************************************************************************/
/*================================[STRUCTURES]================================*/
/******************************************************************************/

/* Structure vecteur entier */
typedef struct vecti
{
  int x;
  int y;
} vecti, coordi;

/* Structure vecteur flottant */
typedef struct vectf
{
  float x;
  float y;
} vectf, coordf;


/******************************************************************************/
/*================================[PROTOTYPES]================================*/
/******************************************************************************/

/* flemme de commenter tout ça...*/

vecti add_vecti(vecti v, vecti v2);

vecti sub_vecti(vecti v1, vecti v2);

vecti mul_scal_vecti(vecti v1, int x);

unsigned int norme_vecti(vecti v);

vecti *normalise_vecti(vecti *v);

float prod_scal_vecti(vecti v1, vecti v2);

vectf add_vectf(vectf v, vectf v2);

vectf sub_vectf(vectf v1, vectf v2);

vectf mul_scal_vectf(vectf v1, float x);

float norme_vectf(vectf v);

vectf *normalise_vectf(vectf *v);

float prod_scal_vectf(vectf v1, vectf v2);


#endif
