/*============================================================================*/
/*== [checkpoint.h] [Version: 0.028a]                                       ==*/
/*============================================================================*/
/*===         _____         _        _____           _         _           ===*/
/*===        |     |___ ___|_|___   |  _  |___ ___  |_|___ ___| |_         ===*/
/*===        | | | | .'|  _| | . |  |   __|  _| . | | | -_|  _|  _|        ===*/
/*===        |_|_|_|__,|_| |_|___|  |__|  |_| |___|_| |___|___|_|          ===*/
/*===                                             |___|                    ===*/
/*============================================================================*/
/*===      =LagMan=                =McCaml=                 =MouleMan=     ===*/
/*============================================================================*/

/******************************************************************************/
/*==============================[DEFINES/ENUMS/]==============================*/
/******************************************************************************/

#ifndef CHECKPOINT_H
#define CHECKPOINT_H

typedef enum ETAT_CHECK {
	PASSED,
	NOT_PASSED
}ETAT_CHECK;

/******************************************************************************/
/*=================================[INCLUDES]=================================*/
/******************************************************************************/

#include "constantes.h"
#include "texture.h"

/******************************************************************************/
/*================================[STRUCTURES]================================*/
/******************************************************************************/

/* Structure checkpoint */
typedef struct checkpoint {
	coordi position;
	coordi taille;
	int nb_sprites_actif;
	int nb_sprites_inactif;
	int v_anim;
	GLuint id_text;
	ETAT_CHECK etat;
	char nom_text[TAILLE_NOM_TEXTURE];
} checkpoint;

/******************************************************************************/
/*================================[PROTOTYPES]================================*/
/******************************************************************************/

checkpoint* new_checkpoint();

checkpoint* init_checkpoint(checkpoint* check);

checkpoint* charger_checkpoint(char* nom_text);


#endif