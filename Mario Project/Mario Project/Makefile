#############################################################################
# Makefile for building: Mario\ Project
# Generated by qmake (2.01a) (Qt 4.7.0) on: mar. janv. 11 16:33:41 2011
# Project:  Mario Project.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile Mario\ Project.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -D_DEBUG
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I. -I/usr/include/libxml2
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lSDL -lSDL_image -lGL -lxml2 -lfmod-3.75
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = action.c \
		alloc_free.c \
		bloc.c \
		bouton.c \
		browser.c \
		collision_system.c \
		editeur.c \
		editeur_action.c \
		group_box.c \
		items.c \
		keystate.c \
		main.c \
		menus.c \
		monstre.c \
		niveau.c \
		particules.c \
		perso.c \
		projectile.c \
		sound.c \
		sprite.c \
		texte.c \
		texture.c \
		tuyau.c \
		vectors.c \
		world.c 
OBJECTS       = action.o \
		alloc_free.o \
		bloc.o \
		bouton.o \
		browser.o \
		collision_system.o \
		editeur.o \
		editeur_action.o \
		group_box.o \
		items.o \
		keystate.o \
		main.o \
		menus.o \
		monstre.o \
		niveau.o \
		particules.o \
		perso.o \
		projectile.o \
		sound.o \
		sprite.o \
		texte.o \
		texture.o \
		tuyau.o \
		vectors.o \
		world.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Mario Project.pro
QMAKE_TARGET  = Mario\ Project
DESTDIR       = 
TARGET        = Mario\ Project

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Mario\ Project.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile Mario\ Project.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile Mario\ Project.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Mario\ Project1.0.0 || $(MKDIR) .tmp/Mario\ Project1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Mario\ Project1.0.0/ && $(COPY_FILE) --parents action.h alloc_free.h bloc.h bouton.h browser.h collision_system.h constantes.h editeur.h group_box.h items.h keystate.h menus.h monstre.h niveau.h particules.h perso.h projectile.h sound.h sprite.h texte.h texte_interface.h texture.h tuyau.h vectors.h world.h .tmp/Mario\ Project1.0.0/ && $(COPY_FILE) --parents action.c alloc_free.c bloc.c bouton.c browser.c collision_system.c editeur.c editeur_action.c group_box.c items.c keystate.c main.c menus.c monstre.c my_dirent.c niveau.c particules.c perso.c projectile.c sound.c sprite.c texte.c texture.c tuyau.c vectors.c world.c .tmp/Mario\ Project1.0.0/ && (cd `dirname .tmp/Mario\ Project1.0.0` && $(TAR) Mario\ Project1.0.0.tar Mario\ Project1.0.0 && $(COMPRESS) Mario\ Project1.0.0.tar) && $(MOVE) `dirname .tmp/Mario\ Project1.0.0`/Mario\ Project1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Mario\ Project1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

action.o: action.c action.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		keystate.h \
		bouton.h \
		sprite.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		projectile.h \
		particules.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o action.o action.c

alloc_free.o: alloc_free.c alloc_free.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o alloc_free.o alloc_free.c

bloc.o: bloc.c bloc.h \
		vectors.h \
		items.h \
		texture.h \
		constantes.h \
		alloc_free.h \
		perso.h \
		texte_interface.h \
		sound.h \
		monstre.h \
		tuyau.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o bloc.o bloc.c

bouton.o: bouton.c bouton.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		sprite.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		projectile.h \
		particules.h \
		keystate.h \
		action.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o bouton.o bouton.c

browser.o: browser.c browser.h \
		constantes.h \
		vectors.h \
		alloc_free.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o browser.o browser.c

collision_system.o: collision_system.c collision_system.h \
		world.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		niveau.h \
		sprite.h \
		projectile.h \
		particules.h \
		bloc.h \
		keystate.h \
		bouton.h \
		action.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o collision_system.o collision_system.c

editeur.o: editeur.c editeur.h \
		world.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		niveau.h \
		sprite.h \
		projectile.h \
		particules.h \
		bloc.h \
		keystate.h \
		bouton.h \
		action.h \
		browser.h \
		group_box.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o editeur.o editeur.c

editeur_action.o: editeur_action.c editeur.h \
		world.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		niveau.h \
		sprite.h \
		projectile.h \
		particules.h \
		bloc.h \
		keystate.h \
		bouton.h \
		action.h \
		browser.h \
		group_box.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o editeur_action.o editeur_action.c

group_box.o: group_box.c group_box.h \
		bouton.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		sprite.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		projectile.h \
		particules.h \
		keystate.h \
		action.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o group_box.o group_box.c

items.o: items.c items.h \
		texture.h \
		vectors.h \
		constantes.h \
		alloc_free.h \
		perso.h \
		texte_interface.h \
		sound.h \
		monstre.h \
		tuyau.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o items.o items.c

keystate.o: keystate.c keystate.h \
		constantes.h \
		vectors.h \
		alloc_free.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o keystate.o keystate.c

main.o: main.c constantes.h \
		vectors.h \
		alloc_free.h \
		world.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		niveau.h \
		sprite.h \
		projectile.h \
		particules.h \
		bloc.h \
		keystate.h \
		bouton.h \
		action.h \
		collision_system.h \
		menus.h \
		editeur.h \
		browser.h \
		group_box.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o main.o main.c

menus.o: menus.c menus.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		sprite.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		projectile.h \
		particules.h \
		keystate.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o menus.o menus.c

monstre.o: monstre.c monstre.h \
		texture.h \
		vectors.h \
		constantes.h \
		alloc_free.h \
		sound.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o monstre.o monstre.c

niveau.o: niveau.c niveau.h \
		sprite.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		projectile.h \
		particules.h \
		bloc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o niveau.o niveau.c

particules.o: particules.c particules.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		texte.h \
		texte_interface.h \
		sprite.h \
		perso.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		projectile.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o particules.o particules.c

perso.o: perso.c perso.h \
		texte_interface.h \
		alloc_free.h \
		vectors.h \
		texture.h \
		constantes.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o perso.o perso.c

projectile.o: projectile.c projectile.h \
		texture.h \
		vectors.h \
		constantes.h \
		alloc_free.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o projectile.o projectile.c

sound.o: sound.c sound.h \
		constantes.h \
		vectors.h \
		alloc_free.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o sound.o sound.c

sprite.o: sprite.c sprite.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		projectile.h \
		particules.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o sprite.o sprite.c

texte.o: texte.c texte.h \
		texte_interface.h \
		alloc_free.h \
		vectors.h \
		sprite.h \
		constantes.h \
		perso.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		projectile.h \
		particules.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o texte.o texte.c

texture.o: texture.c texture.h \
		vectors.h \
		constantes.h \
		alloc_free.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o texture.o texture.c

tuyau.o: tuyau.c tuyau.h \
		monstre.h \
		texture.h \
		vectors.h \
		constantes.h \
		alloc_free.h \
		sound.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o tuyau.o tuyau.c

vectors.o: vectors.c vectors.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o vectors.o vectors.c

world.o: world.c world.h \
		constantes.h \
		vectors.h \
		alloc_free.h \
		perso.h \
		texte_interface.h \
		texture.h \
		sound.h \
		monstre.h \
		items.h \
		tuyau.h \
		niveau.h \
		sprite.h \
		projectile.h \
		particules.h \
		bloc.h \
		keystate.h \
		bouton.h \
		action.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o world.o world.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

